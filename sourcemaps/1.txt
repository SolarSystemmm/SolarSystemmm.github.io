class introScroller{
	constructor({text_elements, btn_elements, text_amount}){
		this._text_elements = body.querySelectorAll(text_elements);
		this._btn_elements = body.querySelectorAll(btn_elements);
		this._text_amount = text_amount;
		this._prev_status = 'text1';
		this._scroller_flag = true;
		this._core_delay = 1000;

		this.start = 0
		this.offset = 0

		this.promo = body.querySelector('.promo')

		this._init()



	}
	_init(){
		this._scrollListener()
	}
	_scrollListener(){
		const that = this
		function throttle(cb, interval) {
			let now = Date.now();

			return function(event) {
			if ((now + interval - Date.now()) < 0) {
					cb(event);
					now = Date.now();
				}
			}
		}

		this._listener = this._getDirection.bind(this)

		// if(window.innerWidth <= 768){
		document.addEventListener("touchstart", touchStart, false);
		document.addEventListener("touchmove", touchMove, false);
		function touchStart(event) {
			that.start = event.touches[0].pageY;
		}
		function touchMove(event) {
			that.offset = that.start - event.touches[0].pageY;
			that._getDirection()
			// throttle(that._listener, that._core_delay)
		}

		document.addEventListener('wheel', throttle(this._listener, this._core_delay))
	}
	_getDirection(e, n){
		console.log(e)
		if(window.innerWidth <= 768){
			this._setDirection(e, this.offset > 0);
			console.log(this.offset)
			return;
		}
		console.log(this.offset)

		const direction = Math.sign(e.wheelDeltaY);
		this._setDirection(e, direction < 0)
	}

	_setDirection(e, bool){

			if(bool && this._prev_status == 'text1'){
			this._text_elements[this._text_amount - this._text_amount].classList.remove('active')
			this._text_elements[this._text_amount - 1].classList.add('active')

			this._btn_elements[	this._btn_elements.length - this._btn_elements.length].classList.remove('active')
			this._btn_elements[this._btn_elements.length - 1].classList.add('active')

			this._prev_status = 'text2'
			
			setTimeout(() => {
				body.classList.remove('ovh')
			}, 2000)

			return false;
		}


		if(!bool && this._prev_status == 'text2'){
			if(window.scrollY != 0) {
				return false;
			}

			if(window.scrollY == 0) {

				this._text_elements[this._text_amount - this._text_amount].classList.add('active')
				this._text_elements[this._text_amount - 1].classList.remove('active')

				this._btn_elements[	this._btn_elements.length - this._btn_elements.length].classList.add('active')
				this._btn_elements[this._btn_elements.length - 1].classList.remove('active')

				body.querySelector('.promo').classList.add('active')
				body.querySelector('.content-next').classList.remove('active')
				body.classList.add('ovh')

				this._prev_status = 'text1';

			}

		}

	}
}
// 
new introScroller({
	text_elements: '.information .text',
	btn_elements: '.btn-more a',
	text_amount: 2,
})
window.onbeforeunload = function(){
window.scrollTo(0, 0);
return null;
}