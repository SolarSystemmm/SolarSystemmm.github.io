{"version":3,"sources":["app.js","model.js","portfolio.js","start.js"],"names":["desktopFeatures","[object Object]","this","options","paths","pointsNumber","maxDistance","color","centroid","border","borderWidth","hoverIndex","offset","x","y","customCursor","e","container","dot","text","offsets","centroid_text","document","querySelector","TweenMax","to","el","dur","scale","textContent","insertAdjacentHTML","jelly","Jelly","startX","startY","dx","dy","lastX","lastY","that","cases","querySelectorAll","about","pfitems","window","addEventListener","opacity","innerWidth","innerHeight","clientX","clientY","shake","paralaxarr","length","i","setAttribute","parallaxInstance","Parallax","push","style","transform","disable","p","forEach","link","classList","contains","start_item","burger_nav","parallax_menu","parallaxInstance_1","parallaxInstance_2","console","log","relativeInput","hoverOnly","limit","cursor","popup_found","targets","targets_array","item","preventDefault","stopPropagation","t","getAttribute","remove","a","toggle","getElementById","updateAgency","sizeCircleToText","pathObject","targetSVG","targetText","charWidth","r","innerHTML","d","path","viewBox","updateAgencys","sizeCircleToTexts","containerModel","initBadTv","THREE","BadTVShader","uniforms","tDiffuse","type","value","time","distortion","distortion2","speed","rollSpeed","vertexShader","join","fragmentShader","renderer","scene","camera","composer","controls","ball","rgbSplit","tvSplit","badTVParams","rgbParams","root","init","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","autoClear","toneMapping","ReinhardToneMapping","setClearColor","appendChild","domElement","Scene","PerspectiveCamera","position","z","add","Object3D","mat_ball","MeshPhongMaterial","specular","transparent","op","o","GLTFLoader","load","gltf","set","traverse","child","Mesh","material","TWEEN","Tween","easing","Easing","Quadratic","Out","onUpdate","start","animate","hlight","AmbientLight","Number","directionalLight","DirectionalLight","castShadow","light","PointLight","light2","light3","light4","renderModel","RenderPass","EffectComposer","addPass","ShaderPass","RGBShiftShader","amount","angle","anineOut","renderToScreen","setInterval","randomizeParams","onWindowResize","Math","random","PI","setTimeout","aspect","updateProjectionMatrix","requestAnimationFrame","rotation","render","update","matchMedia","matches","jellyButton","jelly_s","mouseIncidence","maxIncidence","intensity"],"mappings":"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","file":"../app/main.min.js","sourcesContent":["class desktopFeatures {\n\tconstructor() {\n\t\tthis.options = {\n\t\t\tpaths: '#pentagon-path',\n\t\t\tpointsNumber: 15,\n\t\t\tmaxDistance: 4000,\n\t\t\tcolor: 'transparent',\n\t\t\tcentroid: '.centroid-text',\n\t\t\tborder: '#fff',\n\t\t\tborderWidth: 2,\n\t\t}\n\t\tthis.hoverIndex = 1;\n\t\tthis.offset = {\n\t\t\tx: 90,\n\t\t\ty: 90\n\t\t}\n\t\tthis.customCursor = function(e, container, dot, text, offsets) {\n\t\t\tconst centroid_text = document.querySelector('.centroid-text')\n\t\t\tTweenMax.to(container.el, container.dur, {\n\t\t\t  scale: container.scale\n\t\t\t})\n\t\t\tTweenMax.to(dot.el, dot.dur, {\n\t\t\t  scale: dot.scale\n\t\t\t})\n\t\t\tcentroid_text.textContent = text || \"\"\n\t\t\tthis.offset.x = offsets.x\n\t\t\tthis.offset.y = offsets.y\n\t\t  }\n\t}\n\n\tjelly() {\n\t\tconst template = `\n\t\t\t<svg viewBox=\"0 0 200 200\" style=\"display: none;\">\n\t\t\t\t<path id=\"pentagon-path\" d=\"M100 166C136.451 166 166 136.451 166 100C166 63.5492 136.451 34 100 34C63.5492 34 34 63.5492 34 100C34 136.451 63.5492 166 100 166ZM100 168C137.555 168 168 137.555 168 100C168 62.4446 137.555 32 100 32C62.4446 32 32 62.4446 32 100C32 137.555 62.4446 168 100 168Z\"/>\n\t\t\t</svg>\n\t\t\t<div class=\"jelly-container\">\n\t\t\t\t<!-- Canvas to draw the jelly pentagon -->\n\t\t\t\t<canvas class=\"jelly-canvas\"></canvas>\n\n\t\t\t\t<!-- Text in the centroid of the jelly pentagon -->\n\t\t\t\t<div class=\"centroid-container\">\n\t\t\t\t\t<div class=\"centroid-text\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"dote\"></div>\n\t\t`\n\t\tdocument.querySelector('footer').insertAdjacentHTML('afterend', template)\n\n\t\tconst jelly = new Jelly('.jelly-canvas', this.options);\n\t\tlet startX, startY, dx, dy, endX = 0,\n\t\t  endY = 0,\n\t\t  x = 0,\n\t\t  y = 0,\n\t\t  lastX = 0,\n\t\t  lastY = 0;\n\t\tlet down = false;\n\n\tlet shakeLimit = 1;\n\tconst that = this\n\tconst container = document.querySelector('.jelly-container');\n\tconst dot = document.querySelector('#dote')\n\n\n\tconst cases = document.querySelectorAll('.cases')[0]\n\tconst about = document.querySelectorAll('.about')[0]\n\tconst pfitems = document.querySelectorAll('.portfolio-item')\n\n\n\twindow.addEventListener('load', () => {\n\t  let tween = new TweenMax(container, 0, {\n\t\tscale: 0.35\n\t  })\n\t}, false)\n\n\tdocument.addEventListener('mouseleave', function(e) {\n\t  TweenMax.to(container, .4, {\n\t\topacity: 0,\n\t  })\n\t  TweenMax.to(dot, .4, {\n\t\topacity: 0,\n\t  })\n\t}, false)\n\n\tdocument.addEventListener('mouseenter', function(e) {\n\t  TweenMax.to(container, .4, {\n\t\topacity: 1,\n\t  })\n\t  TweenMax.to(dot, .4, {\n\t\topacity: 1,\n\t  })\n\t}, false)\n\n\tdocument.addEventListener('mousemove', function(e) {\n\t  startX = window.innerWidth / 2;\n\t  startY = window.innerHeight / 2;\n\t  TweenMax.to(dot, .1, {\n\t\tx: e.clientX - 5,\n\t\ty: e.clientY - 5\n\t  })\n\t  x = e.clientX - startX;\n\t  y = e.clientY - startY;\n\t  TweenMax.to(container, .4, {\n\t\tx: e.clientX - that.offset.x,\n\t\ty: e.clientY - that.offset.y\n\t  })\n\n\t  dx = x - lastX;\n\t  dy = y - lastY;\n\t  if (dx > shakeLimit || dx < -shakeLimit) dx = dx < 0 ? -shakeLimit : shakeLimit;\n\t  if (dy > shakeLimit || dy < -shakeLimit) dy = dy < 0 ? -shakeLimit : shakeLimit;\n\t//   console.log(-dx, -dy)\n\t  jelly.shake({\n\t\tx: -dx,\n\t\ty: -dy\n\t  });\n\t  lastX = x;\n\t  lastY = y;\n\t});\n\n\n\n\tlet paralaxarr = []\n\n\tif (pfitems.length > 0) {\n\t  for (let i = 0; i < pfitems.length; i++) {\n\t\tpfitems[i].addEventListener('mousemove', function(e) {\n\t\t  that.customCursor(e, {\n\t\t\t  el: container,\n\t\t\t  scale: 1,\n\t\t\t  dur: .3\n\t\t\t}, {\n\t\t\t  el: dot,\n\t\t\t  scale: 0,\n\t\t\t  dur: .3\n\t\t\t},\n\t\t\t'view', {\n\t\t\t  x: 98,\n\t\t\t  y: 105\n\t\t\t})\n\t\t}, false)\n\t\tpfitems[i].addEventListener('mouseenter', function(e) {\n\t\t  pfitems[i].querySelector('.paralax-pf').setAttribute('data-depth', 2)\n\t\t  let parallaxInstance = new Parallax(pfitems[i]);\n\t\t  paralaxarr.push(parallaxInstance)\n\t\t}, false)\n\t\tpfitems[i].addEventListener('mouseleave', function(e) {\n\t\t  pfitems[i].querySelector('.paralax-pf').style.transform = 'translate3d(0,0,0)'\n\t\t  paralaxarr[0].disable()\n\t\t  for (let p of paralaxarr) {\n\t\t\tp.disable()\n\t\t  }\n\n\t\t  that.customCursor(e, {\n\t\t\tel: container,\n\t\t\tscale: 0.35,\n\t\t\tdur: .3\n\t\t  }, {\n\t\t\tel: dot,\n\t\t\tscale: 1,\n\t\t\tdur: .3\n\t\t  }, '', {\n\t\t\tx: 90,\n\t\t\ty: 90\n\t\t  })\n\t\t}, false)\n\n\t\t// pg paralax\n\t\tconst parr = pfitems[i]\n\t  }\n\t}\n\tif (cases && about) {\n\t  cases.addEventListener('mousemove', function(e) {\n\t\tthat.customCursor(e, {\n\t\t\tel: container,\n\t\t\tscale: 1,\n\t\t\tdur: .3\n\t\t  }, {\n\t\t\tel: dot,\n\t\t\tscale: 0,\n\t\t\tdur: .3\n\t\t  },\n\t\t  'portfolio', {\n\t\t\tx: 98,\n\t\t\ty: 105\n\t\t  })\n\t  }, false)\n\t  about.addEventListener('mousemove', function(e) {\n\t\tthat.customCursor(e, {\n\t\t  el: container,\n\t\t  scale: 1,\n\t\t  dur: .3\n\t\t}, {\n\t\t  el: dot,\n\t\t  scale: 0,\n\t\t  dur: .3\n\t\t}, 'agency', {\n\t\t  x: 98,\n\t\t  y: 105\n\t\t})\n\t  }, false)\n\t  cases.addEventListener('mouseleave', function(e) {\n\t\tthat.customCursor(e, {\n\t\t  el: container,\n\t\t  scale: 0.35,\n\t\t  dur: .3\n\t\t}, {\n\t\t  el: dot,\n\t\t  scale: 1,\n\t\t  dur: .3\n\t\t}, '', {\n\t\t  x: 90,\n\t\t  y: 90\n\t\t})\n\t  }, false)\n\n\t  about.addEventListener('mouseleave', function(e) {\n\t\tthat.customCursor(e, {\n\t\t  el: container,\n\t\t  scale: 0.35,\n\t\t  dur: .3\n\t\t}, {\n\t\t  el: dot,\n\t\t  scale: 1,\n\t\t  dur: .3\n\t\t}, '', {\n\t\t  x: 90,\n\t\t  y: 90\n\t\t})\n\n\t  }, false)\n\n\t}\n\tconst links_list = document.querySelectorAll('a')\n\n\tlinks_list.forEach(link => {\n\t  if (!link.classList.contains('cases') && !link.classList.contains('about')) {\n\t\tlink.addEventListener('mousemove', function(e) {\n\t\t\tthat.customCursor(e, {\n\t\t\tel: container,\n\t\t\tscale: 0.6,\n\t\t\tdur: .2\n\t\t  }, {\n\t\t\tel: dot,\n\t\t\tscale: 1,\n\t\t\tdur: .3\n\t\t  }, '', {\n\t\t\tx: 95,\n\t\t\ty: 95\n\t\t  })\n\n\t\t}, false)\n\t\tlink.addEventListener('mouseleave', function(e) {\n\t\t\tthat.customCursor(e, {\n\t\t\tel: container,\n\t\t\tscale: 0.35,\n\t\t\tdur: .2\n\t\t  }, {\n\t\t\tel: dot,\n\t\t\tscale: 1,\n\t\t\tdur: .3\n\t\t  }, '', {\n\t\t\tx: 90,\n\t\t\ty: 90\n\t\t  })\n\n\t\t}, false)\n\t  }\n\t})\n\tconst start_item = document.querySelector('.start-item')\n\tconst burger_nav = document.querySelector('.burger-nav')\n\tconst parallax_menu = document.querySelector('.menu-item')\n\tstart_item.querySelector('.start').addEventListener('mousemove', () => {\n\t\tTweenMax.to(container, .25, {\n\t\t\topacity: 0\n\t\t  })\n\t})\n\tstart_item.querySelector('.start').addEventListener('mouseleave', () => {\n\t\tTweenMax.to(container, .25, {\n\t\t\topacity: 1\n\t\t  })\n\t})\n\t// new Parallax(parallax_menu, {\n\t\t// relativeInput: true,\n\t\t// hoverOnly: true,\n\t\t// limit: {x:20, y: false}\n\t// });\n\t// burger_nav.setAttribute('data-depth', 3)\n\tburger_nav.addEventListener('mousemove', () => {\n\t\tconsole.log(1)\n\t\tTweenMax.to(container, .5, {\n\t\t\topacity: 0\n\t\t  })\n\t})\n\n\tlet parallaxInstance_1 \n\tstart_item.addEventListener('mouseenter', function(e) {\n\t\t// START BTN DEPTH \n\t\tstart_item.querySelector('.paralax-pf').setAttribute('data-depth', 3)\n\t\n\t\tparallaxInstance_1 = new Parallax(start_item, {\n\t\t\trelativeInput: true,\n\t\t\thoverOnly: true,\n\t\t\tlimit: {x:20, y: false}\n\t\t});\n\n\t  }, false)\n\tstart_item.addEventListener('mouseleave', function(e) {\n\t\tTweenMax.to(container, .5, {\n\t\t\topacity: 1\n\t\t  })\n\t\tstart_item.querySelector('.paralax-pf').style.transform = 'translate3d(0,0,0)'\n\t\tparallaxInstance_1.disable()\n\t\tparallaxInstance_1 = null\n\t})\n\n\n\n\n\tlet parallaxInstance_2\n\n\tparallax_menu.addEventListener('mouseenter', function(e) {\n\t\t// MENU DEPTH \n\t\tparallax_menu.querySelector('.paralax-pf').setAttribute('data-depth', 6)\n\n\t\tparallaxInstance_2 = new Parallax(parallax_menu, {\n\t\t\trelativeInput: true,\n\t\t\thoverOnly: true,\n\t\t\tlimit: {x:20, y: false}\n\t\t});\n\n\t  }, false)\n\t  parallax_menu.addEventListener('mouseleave', function(e) {\n\t\tTweenMax.to(container, .5, {\n\t\t\topacity: 1\n\t\t  })\n\t\tparallax_menu.querySelector('.paralax-pf').style.transform = 'translate3d(0,0,0)'\n\t\tparallaxInstance_2.disable()\n\t\tparallaxInstance_2 = null\n\t})\n  }\n};\n\nconst cursor = new desktopFeatures()\n\nif (window.innerWidth >= 768) {\n\t// cursor.jelly()\n}\n\n// popup\nconst popup_found = document.querySelectorAll('[data-modal]')\nconst targets = document.querySelectorAll('[data-target]')\nlet targets_array = []\nif (popup_found.length > 0) {\n  let data;\n  for (let item of popup_found) {\n\titem.addEventListener('click', function(e) {\n\t  e.preventDefault()\n\t  e.stopPropagation()\n\n\t  for (let t = 0; t < targets.length; t++) {\n\t\tif (this.getAttribute('data-modal') == targets[t].getAttribute('data-target')) {\n\t\t  targets_array.push(targets[t])\n\t\t}\n\t\ttargets[t].classList.remove('view')\n\t  }\n\n\t  for (let a = 0; a < targets_array.length; a++) {\n\t\ttargets_array[a].classList.toggle('view')\n\t  }\n\t}, false)\n  }\n} []\n\nif (document.getElementById(\"textdisplay\")) {\n  function updateAgency() {\n\tdocument.getElementById(\"textdisplay\").textContent = document.getElementById(\"textdisplay\").textContent;\n\tsizeCircleToText(document.getElementById(\"pathoptions\"),\n\t  document.getElementById(\"svgmain\"),\n\t  document.getElementById(\"textdisplay\"),\n\t  7); \n  };\n\n  function sizeCircleToText(pathObject, targetSVG, targetText, charWidth) {\n\tr = (targetText.innerHTML.length * charWidth); //Radius\n\td = (r * 2); \n\tpath = \"M\" + (d) + \",\" + (d) + \"m \" + (-r) + \",0 a \" + (r) + \",\" + (r) + \" 0 1,1 \" + (d) + \",0 a \" + r + \",\" + r + \" 0 1,1 \" + (-d) + \",0\"; //This gibberish is the path construction for a circle. Better way to do this or concat all this?\n\tviewBox = \"0 0 \" + d * 2 + \" \" + d * 2;\n\tpathObject.setAttribute(\"d\", path);\n\ttargetSVG.setAttribute(\"viewBox\", viewBox);\n  }\n  updateAgency();\n}\n\nif (document.getElementById(\"textdisplay1\")) {\n  function updateAgencys() {\n\tdocument.getElementById(\"textdisplay1\").textContent = document.getElementById(\"textdisplay1\").textContent;\n\tsizeCircleToText(document.getElementById(\"pathoptions1\"),\n\t  document.getElementById(\"svgmain1\"),\n\t  document.getElementById(\"textdisplay1\"),)\n  }\n\n  function sizeCircleToTexts(pathObject, targetSVG, targetText, charWidth) {\n\tr = (targetText.innerHTML.length * charWidth);\n\td = (r * 2);\n\tpath = \"M\" + (d) + \",\" + (d) + \"m \" + (-r) + \",0 a \" + (r) + \",\" + (r) + \" 0 1,1 \" + (d) + \",0 a \" + r + \",\" + r + \" 0 1,1 \" + (-d) + \",0\"; //This gibberish is the path construction for a circle. Better way to do this or concat all this?\n\tviewBox = \"0 0 \" + d * 2 + \" \" + d * 2; \n\tpathObject.setAttribute(\"d\", path);\n\ttargetSVG.setAttribute(\"viewBox\", viewBox);\n  }\n  updateAgencys();\n}\n\nlet parallaxInstance = null\n","const containerModel = document.getElementById('container_1');\r\n// const vertex_shader = \r\n// \t`uniform float delta;\r\n// \tvoid main()\r\n// \t{\r\n// \t\tvec3 p = position.xyz;\r\n// \t\tfloat new_x = p.x*cos(delta) - p.y*sin(delta);\r\n// \t\tfloat new_y = p.y*cos(delta) + p.x*sin(delta);\r\n\r\n// \t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(new_x, new_y, p.z, 1.0);\r\n// \t}`\r\n\r\n\tfunction initBadTv(){\r\n\t/**\r\n\t * @author Felix Turner / www.airtight.cc / @felixturner\r\n\t *\r\n\t * Bad TV Shader\r\n\t * Simulates a bad TV via horizontal distortion and vertical roll\r\n\t * Uses Ashima WebGl Noise: https://github.com/ashima/webgl-noise\r\n\t *\r\n\t * Uniforms:\r\n\t * time: steadily increasing float passed in\r\n\t * distortion: amount of thick distortion\r\n\t * distortion2: amount of fine grain distortion\r\n\t * speed: distortion vertical travel speed\r\n\t * rollSpeed: vertical roll speed\r\n\t * \r\n\t * The MIT License\r\n\t * \r\n\t * Copyright (c) Felix Turner\r\n\t * \r\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n\t * of this software and associated documentation files (the \"Software\"), to deal\r\n\t * in the Software without restriction, including without limitation the rights\r\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\t * copies of the Software, and to permit persons to whom the Software is\r\n\t * furnished to do so, subject to the following conditions:\r\n\t * \r\n\t * The above copyright notice and this permission notice shall be included in\r\n\t * all copies or substantial portions of the Software.\r\n\t * \r\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n\t * THE SOFTWARE.\r\n\t * \r\n\t */\r\n\r\n\tTHREE.BadTVShader = {\r\n\t\tuniforms: {\r\n\t\t\t\"tDiffuse\": \t{ type: \"t\", value: null },\r\n\t\t\t\"time\": \t\t{ type: \"f\", value: 0.0 },\r\n\t\t\t\"distortion\":   { type: \"f\", value: 3.0 },\r\n\t\t\t\"distortion2\":  { type: \"f\", value: 5.0 },\r\n\t\t\t\"speed\":     \t{ type: \"f\", value: 0.2 },\r\n\t\t\t\"rollSpeed\":    { type: \"f\", value: 0.1 },\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\t\t\t\r\n\t\t\t\"varying vec2 vUv;\",\r\n\t\t\t\"void main() {\",\r\n\t\t\t\"vUv = uv;\",\r\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\t\"uniform float time;\",\r\n\t\t\t\"uniform float distortion;\",\r\n\t\t\t\"uniform float distortion2;\",\r\n\t\t\t\"uniform float speed;\",\r\n\t\t\t\"uniform float rollSpeed;\",\r\n\t\t\t\"varying vec2 vUv;\",\r\n\t\t\t\r\n\t\t\t// Start Ashima 2D Simplex Noise\r\n\r\n\t\t\t\"vec3 mod289(vec3 x) {\",\r\n\t\t\t\"  return x - floor(x * (1.0 / 289.0)) * 289.0;\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"vec2 mod289(vec2 x) {\",\r\n\t\t\t\"  return x - floor(x * (1.0 / 289.0)) * 289.0;\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"vec3 permute(vec3 x) {\",\r\n\t\t\t\"  return mod289(((x*34.0)+1.0)*x);\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"float snoise(vec2 v)\",\r\n\t\t\t\"  {\",\r\n\t\t\t\"  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\",\r\n\t\t\t\"                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\",\r\n\t\t\t\"                     -0.577350269189626,  // -1.0 + 2.0 * C.x\",\r\n\t\t\t\"                      0.024390243902439); // 1.0 / 41.0\",\r\n\t\t\t\"  vec2 i  = floor(v + dot(v, C.yy) );\",\r\n\t\t\t\"  vec2 x0 = v -   i + dot(i, C.xx);\",\r\n\r\n\t\t\t\"  vec2 i1;\",\r\n\t\t\t\"  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\",\r\n\t\t\t\"  vec4 x12 = x0.xyxy + C.xxzz;\",\r\n\t\t\t\" x12.xy -= i1;\",\r\n\r\n\t\t\t\"  i = mod289(i); // Avoid truncation effects in permutation\",\r\n\t\t\t\"  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\",\r\n\t\t\t\"\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\",\r\n\r\n\t\t\t\"  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\",\r\n\t\t\t\"  m = m*m ;\",\r\n\t\t\t\"  m = m*m ;\",\r\n\r\n\t\t\t\"  vec3 x = 2.0 * fract(p * C.www) - 1.0;\",\r\n\t\t\t\"  vec3 h = abs(x) - 0.5;\",\r\n\t\t\t\"  vec3 ox = floor(x + 0.5);\",\r\n\t\t\t\"  vec3 a0 = x - ox;\",\r\n\r\n\t\t\t\"  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\",\r\n\r\n\t\t\t\"  vec3 g;\",\r\n\t\t\t\"  g.x  = a0.x  * x0.x  + h.x  * x0.y;\",\r\n\t\t\t\"  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\",\r\n\t\t\t\"  return 130.0 * dot(m, g);\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t// End Ashima 2D Simplex Noise\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"vec2 p = vUv;\",\r\n\t\t\t\t\"float ty = time*speed;\",\r\n\t\t\t\t\"float yt = p.y - ty;\",\r\n\t\t\t\t//smooth distortion\r\n\t\t\t\t\"float offset = snoise(vec2(yt*3.0,0.0))*0.2;\",\r\n\t\t\t\t// boost distortion\r\n\t\t\t\t\"offset = offset*distortion * offset*distortion * offset;\",\r\n\t\t\t\t//add fine grain distortion\r\n\t\t\t\t\"offset += snoise(vec2(yt*50.0,0.0))*distortion2*0.001;\",\r\n\t\t\t\t//combine distortion on X with roll on Y\r\n\t\t\t\t\"gl_FragColor = texture2D(tDiffuse,  vec2(fract(p.x + offset),fract(p.y-time*rollSpeed) ));\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\t}\r\n}\r\n\r\ninitBadTv()\r\n\r\nlet renderer, scene, camera, composer, controls, ball, rgbSplit, tvSplit, badTVParams, rgbParams, root;\r\nif (containerModel) {\r\n  init();\r\n}\r\n\r\n\r\nfunction init() {\r\n\t\r\n  renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    alpha: true\r\n  });\r\n  renderer.setPixelRatio((window.devicePixelRatio) ? window.devicePixelRatio : 1);\r\n  renderer.setSize(window.innerWidth - 10, window.innerHeight - 10);\r\n  renderer.autoClear = false;\r\n  renderer.toneMapping = THREE.ReinhardToneMapping;\r\n  renderer.setClearColor(0x000000, 0.0);\r\n  document.getElementById('container_1').appendChild(renderer.domElement);\r\n\r\n  scene = new THREE.Scene();\r\n\r\n  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);\r\n  camera.position.z = 50;\r\n  scene.add(camera);\r\n\r\n  ball = new THREE.Object3D();\r\n\r\n  scene.add(ball);\r\n\r\n\r\n  var mat_ball = new THREE.MeshPhongMaterial({\r\n    color: 0x333333,\r\n\tspecular: 0x777777,\r\n\ttransparent: true,\r\n\topacity: 0,\r\n  });\r\n  let op = {\r\n\t  o: 0\r\n  }\r\n  const gltfLoader = new THREE.GLTFLoader();\r\n\t\t\tconst url = 'img/markoff-2.glb';\r\n\t\t\tgltfLoader.load(url, (gltf) => {\r\n\t\t\t\troot = gltf.scene;\r\n\t\t\t\tscene.add(root);\r\n                root.position.y = -20.1\r\n                root.position.z = 10\r\n                root.scale.set(3.5,3.5,3.5)\r\n\r\n\t\t\t\tgltf.scene.traverse(function(child) {\r\n\t\t\t\t\tif (child instanceof THREE.Mesh) {\r\n\t\t\t\t\t\t\tchild.material = mat_ball\r\n\r\n\t\t\t\t\t\t\t// анимация появления (1500 - время выполнения анимации)\r\n\r\n\t\t\t\t\t\t\tconst a = new TWEEN.Tween(op)\r\n\t\t\t\t\t\t\t.to({o: 1}, 1500)\r\n\t\t\t\t\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t\t\t\t\t.onUpdate(() => {\r\n\t\t\t\t\t\t\t\tchild.material.opacity = op.o\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.start()\r\n\t\t\t\t\t}\r\n                });\r\n\r\n\t\t\t   animate()\r\n\t\t\t});\r\n\r\n\t\tlet lightClor = 0x333333\r\n\t\tlet hlight = new THREE.AmbientLight(Number(lightClor));\r\n\t\tscene.add(hlight);\r\n\r\n\t\tlet directionalLight = new THREE.DirectionalLight( Number(0x777777), 1);\r\n\t\tdirectionalLight.position.set(0, 1, 0);\r\n\t\tdirectionalLight.castShadow = true;\r\n\t\tscene.add(directionalLight);\r\n\r\n\t\tlet light = new THREE.PointLight( Number(lightClor), 1);\r\n\t\tlight.position.set(0, 300, 500);\r\n\t\tscene.add(light);\r\n\r\n\t\tlet light2 = new THREE.PointLight(Number(lightClor), 1);\r\n\t\tlight2.position.set(500, 100, 0);\r\n\t\tscene.add(light2);\r\n\r\n\t\tlet  light3 = new THREE.PointLight(Number(lightClor), 1);\r\n\t\tlight3.position.set(0, 100, -500);\r\n\t\tscene.add(light3);\r\n\r\n\t\tlet light4 = new THREE.PointLight(Number(0x2a1e5b), 1);\r\n\t\tlight4.position.set(-500, 300, 500);\r\n\t\tscene.add(light4);\r\n\r\n\r\n  var renderModel = new THREE.RenderPass(scene, camera);\r\n  composer = new THREE.EffectComposer(renderer);\r\n  composer.addPass(renderModel);\r\n  console.log(1)\r\n\r\n    // composer = new THREE.EffectComposer( renderer);\r\n    // renderPass = new THREE.RenderPass( scene, camera );\r\n    // badTVPass = new THREE.ShaderPass( THREE.BadTVShader );\r\n    // composer.addPass( renderPass );\r\n    // composer.addPass( badTVPass );\r\n    // badTVPass.renderToScreen = true;\r\n\r\n  rgbSplit = new THREE.ShaderPass(THREE.RGBShiftShader);\r\n  tvSplit = new THREE.ShaderPass(THREE.BadTVShader);\r\n\r\n  badTVParams = {\r\n    distortion: 1.0,\r\n    distortion2: 1.0,\r\n  }\r\n  rgbParams = {\r\n    amount: 0.15,\r\n    angle: 0.0,\r\n  }\r\n\r\n  anineOut();\r\n\r\n  composer.addPass(rgbSplit);\r\n  composer.addPass(tvSplit);\r\n\r\n  tvSplit.renderToScreen = true;\r\n  rgbSplit.renderToScreen = true;\r\n\r\n//   ниже задается интервал для появления глитча\r\n\r\n  setInterval(randomizeParams, 3000);\r\n\r\n  window.addEventListener('resize', onWindowResize, false);\r\n\r\n};\r\n\r\nfunction anineOut() {\r\n  rgbSplit.uniforms[\"amount\"].value = 0;\r\n  tvSplit.uniforms[\"distortion\"].value = 0;\r\n  tvSplit.uniforms[\"distortion2\"].value = 0;\r\n};\r\n\r\nfunction randomizeParams() {\r\n\t// badTVParams.distortion - изгибает модель, поэтому 0\r\n\t// badTVParams.distortion2 - менять только цифру 4 (если нужно ослабить/усилить искажение модели (ребристость))\r\n    badTVParams.distortion =  0;\r\n    badTVParams.distortion2 = Math.random() * 4 + 0.1;\r\n\r\n\t//  rgbParams.angle - угол = кол-во частил rbg спектра\r\n\t//  rgbParams.amount - кол-во распадания на спектр\r\n    rgbParams.angle = Math.random() * 2;\r\n    rgbParams.amount = Math.random() * 0.03 ;\r\n\r\n    rgbSplit.uniforms[\"amount\"].value = rgbParams.amount * Math.random();\r\n\trgbSplit.uniforms[\"angle\"].value = rgbParams.angle * Math.PI;\r\n\ttvSplit.uniforms[\"distortion\"].value = badTVParams.distortion * Math.random();\r\n\ttvSplit.uniforms[\"distortion2\"].value = badTVParams.distortion2 * Math.random();\r\n\r\n\t// ниже задается время, через которое исчезает глитч\r\n\tsetTimeout(anineOut, 500);\r\n}\r\n\r\nfunction onWindowResize() {\r\n  camera.aspect = window.innerWidth / window.innerHeight;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  composer.setSize(window.innerWidth, window.innerHeight);\r\n}\r\n\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  root.rotation.y += 0.02;\r\n  composer.render();\r\n  TWEEN.update()\r\n//   tvSplit.uniforms[\"time\"].value += ;\r\n};\r\n\r\n\tif(window.matchMedia('(min-width: 768px)').matches){\r\n\t\tlet a = document.querySelector('#container_1')\r\n\t\t\r\n\t\ta ? setTimeout(() => {\r\n\t\t\ta.setAttribute('data-depth', 0.5)\r\n\t\t\tlet scene = document.getElementById('parallax');\r\n\t\t\tlet parallaxInstance = new Parallax(scene);\r\n\t\t}, []) : false\r\n\t}\r\n","// function jellyButton() {\n\n\n// jellyButton()","function jellyButton() {\n\t\t\t\n\t\tconst template = `\n\t\t\t<svg viewBox=\"0 0 200 200\" style=\"display: none;\">\n\t\t\t\t<path id=\"pentagon-path-s\" d=\"M100 166C136.451 166 166 136.451 166 100C166 63.5492 136.451 34 100 34C63.5492 34 34 63.5492 34 100C34 136.451 63.5492 166 100 166ZM100 168C137.555 168 168 137.555 168 100C168 62.4446 137.555 32 100 32C62.4446 32 32 62.4446 32 100C32 137.555 62.4446 168 100 168Z\"/>\n\t\t\t</svg>\n\t\t\t<div class=\"jelly-container-s\">\n\t\t\t\t<!-- Canvas to draw the jelly pentagon -->\n\t\t\t\t<canvas class=\"jelly-canvas-s\"></canvas>\n\n\t\t\t\t<!-- Text in the centroid of the jelly pentagon -->\n\t\t\t\t<div class=\"centroid-container-s\">\n\t\t\t\t\t<div class=\"centroid-text-s\"></div>\n\t\t\t\t</div>\n\t\t\t</div>`\n\tdocument.querySelector('footer').insertAdjacentHTML('afterend', template)\n\nconst options = {\n\tpaths: '#pentagon-path-s',\n\tpointsNumber: 20,\n\tmaxDistance: 1000,\n\tmouseIncidence: 20,\n\tmaxIncidence: 20,\n\tintensity: 1,\n\tcolor: 'white',\n\tcentroid: '.centroid-text-s',\n}\n\n\tconst jelly_s = new Jelly('.jelly-canvas-s', options);\n\n\tconst container = document.querySelector('.jelly-container-s');\n    var startX, startY, dx, dy, endX = 0, endY = 0, x = 0, y = 0, lastX = 0, lastY = 0;\n\n\tconst centroid_text = document.querySelector('.centroid-text-s')\n\n\tconst main_button = document.querySelector('.start')\n\n\tcentroid_text.innerHTML = 'start <br> project'\n\tconst shakeLimit = 2.5\n\tdocument.addEventListener('click', function (e) {\n        // if (down) {\n            x = e.clientX - startX;\n            y = e.clientY - startY;\n            container.style.transform = 'translate(' + (endX + x) + 'px, ' + (endY + y) + 'px)';\n\n            dx = x - lastX;\n            dy = y - lastY;\n            if (dx > shakeLimit || dx < - shakeLimit) dx = dx < 0 ? - shakeLimit : shakeLimit;\n            if (dy > shakeLimit || dy < - shakeLimit) dy = dy < 0 ? - shakeLimit : shakeLimit;\n\n            // The `shake` function will \"move\" the half of the points (alternately) the distance defined\n            jelly_s.shake({x: 2, y:2});\n\n            lastX = x;\n            lastY = y;\n        // }\n    });\n\n}\n\n  jellyButton()"]}